#POD QoS:  depending on limits & requests values the POD QoS will be determined
#Multi-container SideCar Design Pattern with one init Container, one app-Container and a fluentd sidecar container alongside main container


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.db.name }}
spec:
  replicas: {{ .Values.db.replicanumber }}
  selector:
    matchLabels:
      app:  {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app:  {{ .Values.db.name }}
    spec:
      containers:                                         # Resources values are not pre-defined to make the Pod QoS Guaranteed
      - name:  {{ .Values.db.name }}-container
        image: {{ .Values.db.container1.image}}
        ports:
        - containerPort:  {{ .Values.db.container1.portnumber }}
        readinessProbe: 
          exec: 
            command:
            - cat
            - /etc/resolv.conf
          initialDelayseconds: {{ .Values.app.container1.readinessprobe.initialDelayseconds }}
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: {{ .Values.app.container1.readinessprobe.successThreshold }}
          failureThreshold: {{ .Values.app.container1.readinessprobe.failureThreshold }}
